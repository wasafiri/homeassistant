esphome:
  name: cyd-timer
  friendly_name: CYD Timer

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "KSiQND+Jp+OY6knJmo2K5Ci5Td0UU+vce2pHUIR/Wkc="

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  ap:
    ssid: "CYD-Timer Fallback Hotspot"
    password: "86UioG8zRMA3"

captive_portal:

################################################################
# Hardware Configuration for the CYD (Cheap Yellow Display)
################################################################

i2c:
  - sda: 27
    scl: 22
    scan: true

spi:
  # SPI bus for the ILI9341 TFT
  - id: tft
    clk_pin: 14
    mosi_pin: 13
    miso_pin:
      number: 12
      ignore_strapping_warning: true

  # SPI bus for the XPT2046 Touch
  - id: touch
    clk_pin: 25
    mosi_pin: 32
    miso_pin: 39

output:
  - id: backlight_pwm
    platform: ledc
    pin: 21

  - id: output_red
    platform: ledc
    pin: 4
    inverted: true

  - id: output_green
    platform: ledc
    pin: 16
    inverted: true

  - id: output_blue
    platform: ledc
    pin: 17
    inverted: true

light:
  - id: backlight
    platform: monochromatic
    output: backlight_pwm
    name: "Display Backlight"
    restore_mode: ALWAYS_ON

  - id: led
    platform: rgb
    red: output_red
    green: output_green
    blue: output_blue
    restore_mode: ALWAYS_OFF

################################################################
# Timer Configuration (Names and Values in HA)
################################################################
text_sensor:
  - platform: template
    name: "Timer 1 Name"
    id: timer1_name
    icon: "mdi:label"
    initial_value: "Timer 1"
  - platform: template
    name: "Timer 2 Name"
    id: timer2_name
    icon: "mdi:label"
    initial_value: "Timer 2"
  - platform: template
    name: "Timer 3 Name"
    id: timer3_name
    icon: "mdi:label"
    initial_value: "Timer 3"
  - platform: template
    name: "Timer 4 Name"
    id: timer4_name
    icon: "mdi:label"
    initial_value: "Timer 4"

number:
  - platform: template
    name: "Timer 1 Days"
    id: timer1_days
    icon: "mdi:timer"
    min_value: 0
    max_value: 9999
    step: 1
    restore_value: yes
    initial_value: 0
    optimistic: yes
    mode: box
    on_value:
      then:
        lambda: |-
          id(timer_values)[0] = id(timer1_days).state;
          id(main_display).update();
  - platform: template
    name: "Timer 2 Days"
    id: timer2_days
    icon: "mdi:timer"
    min_value: 0
    max_value: 9999
    step: 1
    restore_value: yes
    initial_value: 0
    optimistic: yes
    mode: box
    on_value:
      then:
        lambda: |-
          id(timer_values)[1] = id(timer2_days).state;
          id(main_display).update();
  - platform: template
    name: "Timer 3 Days"
    id: timer3_days
    icon: "mdi:timer"
    min_value: 0
    max_value: 9999
    step: 1
    restore_value: yes
    initial_value: 0
    optimistic: yes
    mode: box
    on_value:
      then:
        lambda: |-
          id(timer_values)[2] = id(timer3_days).state;
          id(main_display).update();
  - platform: template
    name: "Timer 4 Days"
    id: timer4_days
    icon: "mdi:timer"
    min_value: 0
    max_value: 9999
    step: 1
    restore_value: yes
    initial_value: 0
    optimistic: yes
    mode: box
    on_value:
      then:
        lambda: |-
          id(timer_values)[3] = id(timer4_days).state;
          id(main_display).update();

button:
  - platform: template
    name: "Reset Timer 1"
    icon: "mdi:restart"
    on_press:
      then:
        - number.set:
            id: timer1_days
            value: 0
  - platform: template
    name: "Reset Timer 2"
    icon: "mdi:restart"
    on_press:
      then:
        - number.set:
            id: timer2_days
            value: 0
  - platform: template
    name: "Reset Timer 3"
    icon: "mdi:restart"
    on_press:
      then:
        - number.set:
            id: timer3_days
            value: 0
  - platform: template
    name: "Reset Timer 4"
    icon: "mdi:restart"
    on_press:
      then:
        - number.set:
            id: timer4_days
            value: 0

################################################################
# Touchscreen Configuration
################################################################
touchscreen:
  - id: main_touchscreen
    platform: xpt2046
    spi_id: touch
    cs_pin: 33
    interrupt_pin: 36
    threshold: 400
    calibration:
      x_min: 280
      x_max: 3860
      y_min: 340
      y_max: 3860
    transform:
      mirror_x: true
    on_touch:
      - lambda: |-
          // Reset button positions for 2x2 grid
          for (int i = 0; i < 4; i++) {
            int col = i % 2;
            int row = i / 2;
            int x = col * 160;
            int y = row * 120;
            
            // Check if touch is in reset button area
            if (touch.x >= (x + 110) && touch.x <= (x + 155) &&
                touch.y >= (y + 15) && touch.y <= (y + 40)) {
              // Reset timer through the number component
              switch(i) {
                case 0: id(timer1_days).set(0); break;
                case 1: id(timer2_days).set(0); break;
                case 2: id(timer3_days).set(0); break;
                case 3: id(timer4_days).set(0); break;
              }
            }
          }

################################################################
# Display Configuration
################################################################
display:
  - id: main_display
    platform: ili9xxx
    model: ILI9341
    spi_id: tft
    cs_pin:
      number: 15
      ignore_strapping_warning: true
    dc_pin:
      number: 2
      ignore_strapping_warning: true
    invert_colors: false
    auto_clear_enabled: false
    rotation: 90

    lambda: |-
      it.fill(Color::BLACK);
      
      // Draw timer boxes in a 2x2 grid
      for (int i = 0; i < 4; i++) {
        int col = i % 2;
        int row = i / 2;
        int x = col * 160;
        int y = row * 120;
        
        // Get current values
        std::string name;
        int value;
        switch(i) {
          case 0: 
            name = id(timer1_name).state;
            value = id(timer1_days).state;
            break;
          case 1: 
            name = id(timer2_name).state;
            value = id(timer2_days).state;
            break;
          case 2: 
            name = id(timer3_name).state;
            value = id(timer3_days).state;
            break;
          case 3: 
            name = id(timer4_name).state;
            value = id(timer4_days).state;
            break;
        }
        
        // Box background
        it.filled_rectangle(x + 10, y + 10, 150, 110, id(retro_blue));
        
        // Timer value (large number)
        it.printf(x + 50, y + 20, id(roboto_large), id(retro_white), "%d", value);
        
        // "DAYS" text
        it.print(x + 60, y + 60, id(roboto_small), id(retro_cyan), "DAYS");
        
        // Timer name at bottom
        it.print(x + 30, y + 85, id(roboto_small), id(retro_white), name.c_str());
        
        // Reset button
        it.filled_rectangle(x + 110, y + 15, 45, 25, Color::BLACK);
        it.print(x + 115, y + 18, id(roboto_small), id(retro_white), "R");
      }

################################################################
# Colors and Fonts
################################################################
color:
  - id: retro_red
    hex: FF1744
  - id: retro_orange
    hex: FF9100
  - id: retro_yellow
    hex: FFD600
  - id: retro_green
    hex: 00E676
  - id: retro_blue
    hex: 00B0FF
  - id: retro_cyan
    hex: 00FFFF
  - id: retro_teal
    hex: 00BFA5
  - id: retro_white
    hex: FFFFFF

font:
  - file: "Roboto-Regular.ttf"
    id: roboto_small
    size: 24
  - file: "Roboto-Regular.ttf"
    id: roboto_medium
    size: 36
  - file: "Roboto-Regular.ttf"
    id: roboto_large
    size: 38

################################################################
# Time Configuration for Daily Updates
################################################################
time:
  - platform: sntp
    id: time_sntp
    timezone: America/Los_Angeles
    on_time:
      - seconds: 0
        minutes: 0
        hours: 0
        then:
          lambda: |-
            id(timer1_days).update(id(timer1_days).state + 1);
            id(timer2_days).update(id(timer2_days).state + 1);
            id(timer3_days).update(id(timer3_days).state + 1);
            id(timer4_days).update(id(timer4_days).state + 1);

################################################################
# Regular Display Updates
################################################################
interval:
  - interval: 1s
    then:
      - component.update: main_display
