esphome:
  name: cyd-beta
  friendly_name: CYD Beta

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret ha_api

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  ap:
    ssid: "Cyd-Beta Fallback Hotspot"
    password: "86UioG8zRMA3"

captive_portal:

################################################################
# Hardware Configuration for the CYD (Cheap Yellow Display)
################################################################
i2c:
  - sda: 27
    scl: 22
    scan: true

spi:
  # SPI bus for the ILI9341 TFT
  - id: tft
    clk_pin: 14
    mosi_pin: 13
    miso_pin: 
      number: 12
      ignore_strapping_warning: true

  # SPI bus for the XPT2046 Touch
  - id: touch
    clk_pin: 25
    mosi_pin: 32
    miso_pin: 39

output:
  - id: backlight_pwm
    platform: ledc
    pin: 21

  - id: output_red
    platform: ledc
    pin: 4
    inverted: true

  - id: output_green
    platform: ledc
    pin: 16
    inverted: true

  - id: output_blue
    platform: ledc
    pin: 17
    inverted: true

light:
  - id: backlight
    platform: monochromatic
    output: backlight_pwm
    name: "Display Backlight"
    restore_mode: ALWAYS_ON

  - id: led
    platform: rgb
    red: output_red
    green: output_green
    blue: output_blue
    restore_mode: ALWAYS_OFF

################################################################
# Touchscreen Configuration
################################################################
touchscreen:
  - id: main_touchscreen
    platform: xpt2046
    spi_id: touch
    cs_pin: 33
    interrupt_pin: 36
    threshold: 400
    calibration:
      x_min: 280
      x_max: 3860
      y_min: 340
      y_max: 3860
    transform:
      mirror_x: true

################################################################
# Display Configuration (5 sensors in a 2×3 grid)
################################################################
display:
  - platform: ili9xxx
    model: ILI9341
    id: main_display
    spi_id: tft
    cs_pin:
      number: 15
      ignore_strapping_warning: true
    dc_pin:
      number: 2
      ignore_strapping_warning: true
    invert_colors: false
    rotation: 90
    auto_clear_enabled: false

    lambda: |-
      it.fill(Color::BLACK);

      // We'll do 2 rows × 3 columns = 6 cells, each cell is 105 px wide x 115 px tall.
      // We'll place a 5 px margin around all edges so we don't clip anything.
      int colWidth = 105;
      int rowHeight = 115;

      struct StatusInfo {
        const char* text;
        Color color;
        bool needs_blink;
      };

      auto should_blink = [&]() -> bool {
        // Blink every 150 ms
        return ((millis() / 150) % 2) == 0;
      };

      auto safe_value = [&](float v) -> float {
        if (!std::isfinite(v)) return 0.0f;
        if (v < 0.0f)   return 0.0f;
        if (v > 100.0f) return 100.0f;
        return v;
      };

      auto get_status = [&](float v) -> StatusInfo {
        if (v >= 58.0f)   return {"DROWNING!", id(retro_red), true};
        if (v <= 12.0f)    return {"DYING!",    id(retro_red), true};
        if (v <= 18.0f)   return {"DRY!",      id(retro_orange), true};
        if (v <= 23.0f)   return {"WATER SOON",id(retro_yellow), true};
        return {"GOOD!", id(retro_green), false};
      };

      struct Plant {
        const char* name;
        optional<float> value;
        Color name_color;
      };

      // 5 sensors:
      Plant plants[5] = {
        { "Little Cado",     id(soil_moisture_1).state, id(retro_blue) },
        { "Cactus",        id(soil_moisture_2).state, id(retro_orange) },
        { "Hibiscus",        id(soil_moisture_3).state, id(retro_yellow) },
        { "Succulent Tbl",   id(soil_moisture_4).state, id(retro_teal) },
        { "Spider Plant",    id(soil_moisture_5).state, id(retro_cyan) }
      };

      for (int i = 0; i < 6; i++) {
        if (i >= 5) break; // Only 5 sensors

        int col = i % 3;
        int row = i / 3;

        // Each cell's top-left corner
        int x = 5 + col * colWidth;
        int y = 5 + row * rowHeight;

        auto &pl = plants[i];
        if (!pl.value.has_value()) {
          // No data yet
          continue;
        }

        float val = safe_value(pl.value.value());
        StatusInfo st = get_status(val);

        // If critical, blink
        bool show_text = !st.needs_blink || should_blink();
        // Outline color
        Color box_color = st.color;

        // We'll draw a 100×110 rectangle inside the 105×115 cell, offset by 3 px
        it.rectangle(x + 3, y + 3, 100, 110, box_color);

        if (show_text) {
          // Plant name near the top
          it.print(x + 8, y + 8, id(roboto_small), pl.name_color, pl.name);

          // Moisture percentage
          it.printf(x + 10, y + 40, id(roboto_medium), id(retro_red), "%.1f%%", val);

          // Status text
          it.print(x + 10, y + 80, id(roboto_small), st.color, st.text);
        }
      }

################################################################
# Colors and Fonts
################################################################
color:
  - id: retro_red
    hex: FF1744
  - id: retro_orange
    hex: FF9100
  - id: retro_yellow
    hex: FFD600
  - id: retro_green
    hex: 00E676
  - id: retro_blue
    hex: 00B0FF
  - id: retro_cyan
    hex: 00FFFF
  - id: retro_teal
    hex: 00BFA5

font:
  # Adjust as you see fit:
  - file: "Roboto-Regular.ttf"
    id: roboto_small
    size: 14

  - file: "Roboto-Regular.ttf"
    id: roboto_medium
    size: 32

  - file: "Roboto-Regular.ttf"
    id: roboto_large
    size: 36

################################################################
# Moisture Sensors (from Home Assistant)
################################################################
sensor:
  - platform: homeassistant
    id: soil_moisture_1
    entity_id: sensor.gw1100b_soil_moisture_1

  - platform: homeassistant
    id: soil_moisture_2
    entity_id: sensor.gw1100b_soil_moisture_2

  - platform: homeassistant
    id: soil_moisture_3
    entity_id: sensor.gw1100b_soil_moisture_3

  - platform: homeassistant
    id: soil_moisture_4
    entity_id: sensor.gw1100b_soil_moisture_4

  - platform: homeassistant
    id: soil_moisture_5
    entity_id: sensor.gw1100b_soil_moisture_5

################################################################
# Page-Update Intervals
################################################################
interval:
  - interval: 1000ms
    then:
      - component.update: main_display
